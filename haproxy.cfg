# Global settings
global
    log /dev/log local0
    chroot /var/haproxy
    pidfile /var/run/haproxy.pid
    maxconn 2000
    user haproxy
    group haproxy
    daemon
    tune.ssl.default-dh-param 2048
    nbproc 2  # Run 2 processes to utilize 2 cores

# Default settings
defaults
    log global
    mode tcp
    timeout connect 10000
    timeout client 10000
    timeout server 10000
    option tcplog

# Frontend for HTTPS (port 443) - TLS termination for Signal proxy only
frontend signal_frontend
    bind *:443 ssl crt /usr/local/etc/letsencrypt/live/
            # Adjust cert path as needed, but only the dir is needed. HAProxy scans and picks up all
            # domain certs in the path so you can host multiple domains on a single server
    mode tcp

    # SNI-based routing for specified Signal domains
    use_backend signal_cdn if { req_ssl_sni -i cdn.signal.org }
    use_backend signal_cdn2 if { req_ssl_sni -i cdn2.signal.org }
    use_backend signal_cdn3 if { req_ssl_sni -i cdn3.signal.org }
    use_backend signal_cdsi if { req_ssl_sni -i cdsi.signal.org }
    use_backend signal_chat if { req_ssl_sni -i chat.signal.org }
    use_backend signal_contentproxy if { req_ssl_sni -i contentproxy.signal.org }
    use_backend signal_sfu if { req_ssl_sni -i sfu.voip.signal.org }
    use_backend signal_storage if { req_ssl_sni -i storage.signal.org }
    use_backend signal_svr2 if { req_ssl_sni -i svr2.signal.org }
    use_backend signal_ud_chat if { req_ssl_sni -i ud-chat.signal.org }
    use_backend signal_updates if { req_ssl_sni -i updates.signal.org }
    use_backend signal_updates2 if { req_ssl_sni -i updates2.signal.org }
    default_backend drop_backend  # Drop traffic not matching Signal domains

# Backends for Signal services
backend signal_cdn
    mode tcp
    server cdn_server cdn.signal.org:443 ssl verify none

backend signal_cdn2
    mode tcp
    server cdn2_server cdn2.signal.org:443 ssl verify none

backend signal_cdn3
    mode tcp
    server cdn3_server cdn3.signal.org:443 ssl verify none

backend signal_cdsi
    mode tcp
    server cdsi_server cdsi.signal.org:443 ssl verify none

backend signal_chat
    mode tcp
    server chat_server chat.signal.org:443 ssl verify none

backend signal_contentproxy
    mode tcp
    server contentproxy_server contentproxy.signal.org:443 ssl verify none

backend signal_sfu
    mode tcp
    server sfu_server sfu.voip.signal.org:443 ssl verify none

backend signal_storage
    mode tcp
    server storage_server storage.signal.org:443 ssl verify none

backend signal_svr2
    mode tcp
    server svr2_server svr2.signal.org:443 ssl verify none

backend signal_ud_chat
    mode tcp
    server ud_chat_server ud-chat.signal.org:443 ssl verify none

backend signal_updates
    mode tcp
    server updates_server updates.signal.org:443 ssl verify none

backend signal_updates2
    mode tcp
    server updates2_server updates2.signal.org:443 ssl verify none

# Backend to drop unmatched traffic
backend drop_backend
    mode tcp
    # No servers defined, effectively drops traffic
